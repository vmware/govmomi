#  Copyright (c) 2021 VMware, Inc. All Rights Reserved.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#  http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

name: govc Tests

on:
  push:
    branches: ["main"]

  pull_request:
    branches: ["main"]

concurrency:
  group: govmomi-govc-tests-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  govc-tests:
    name: Run govc Tests
    strategy:
      fail-fast: false
      matrix:
        go-version: ["1.23"]
        platform: ["ubuntu-20.04"]
        cmd: ["govc-test"]
        experimental: [false]
        timeout: [20]

    runs-on: ${{ matrix.platform }}
    continue-on-error: ${{ matrix.experimental }}
    timeout-minutes: ${{ matrix.timeout }}

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Restore Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Run ${{ matrix.cmd }}
        run: |
          make ${{ matrix.cmd }}

      - name: Debug with tmate on failure
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3

  govc-docs:
    name: Verify govc docs are up2date
    strategy:
      matrix:
        go-version: ["1.23"]
        platform: ["ubuntu-20.04"]
    runs-on: ${{ matrix.platform }}
    timeout-minutes: 3
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Restore Go cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Run "make doc"
        run: |
          make doc
          if [ -z "$(git status --porcelain)" ]; then
            echo "govc/USAGE.md is up2date..."
          else
            echo "dirty working directory (diff):"
            git --no-pager diff
            echo "::error file=govc/USAGE.md::Run make doc to update USAGE.md"
            exit 1
          fi
